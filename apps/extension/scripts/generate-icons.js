#!/usr/bin/env node

/**
 * Icon Generation Script
 * Converts SVG icons to PNG format for Chrome extension
 */

const fs = require('fs');
const path = require('path');

// Icon sizes to generate
const SIZES = [16, 32, 48, 128];

// SVG content from frame.svg - update this if the design changes
const SVG_CONTENT = `<svg width="PLACEHOLDER_WIDTH" height="PLACEHOLDER_HEIGHT" viewBox="0 0 34 32" fill="none" xmlns="http://www.w3.org/2000/svg">
<g clip-path="url(#clip0_131_3793)">
<path fill-rule="evenodd" clip-rule="evenodd" d="M18.6038 6.97964C17.5219 6.97964 16.4506 7.19215 15.451 7.60503C14.4515 8.01788 13.5433 8.62307 12.7783 9.38592C12.0133 10.1488 11.4065 11.0545 10.9924 12.0513C10.7022 12.7499 10.5108 13.4837 10.4222 14.2316C10.3526 14.8194 10.0305 15.3622 9.5009 15.6263L7.9343 16.4074C7.40465 16.6715 7.05716 17.2144 7.12678 17.8022C7.21536 18.5501 7.40684 19.2838 7.69702 19.9824C8.11108 20.9792 8.71791 21.8849 9.48287 22.6478C10.2479 23.4107 11.1562 24.0159 12.1556 24.4287C13.1552 24.8416 14.2265 25.0541 15.3083 25.0541C16.3903 25.0541 17.4616 24.8416 18.4611 24.4287C19.4606 24.0159 20.3689 23.4107 21.1339 22.6478C21.8989 21.8849 22.5057 20.9792 22.9197 19.9824C23.2099 19.2838 23.4014 18.5501 23.49 17.8022C23.5596 17.2144 23.8816 16.6715 24.4113 16.4074L25.9779 15.6263C26.5075 15.3622 26.855 14.8194 26.7854 14.2316C26.6968 13.4837 26.5053 12.7499 26.2151 12.0513C25.8011 11.0545 25.1942 10.1488 24.4293 9.38592C23.6643 8.62307 22.7561 8.01788 21.7565 7.60503C20.7569 7.19215 19.6856 6.97964 18.6038 6.97964ZM22.4095 13.6233C22.4925 13.8232 22.5594 14.0289 22.6097 14.2383C22.748 14.8138 22.3882 15.3622 21.8586 15.6263L20.2921 16.4074C19.7624 16.6715 19.4525 17.2199 19.3143 17.7954C19.2639 18.0049 19.1971 18.2105 19.1141 18.4105C18.907 18.9088 18.6036 19.3616 18.2211 19.7431C17.8386 20.1246 17.3845 20.4272 16.8848 20.6336C16.385 20.84 15.8493 20.9463 15.3083 20.9463C14.7675 20.9463 14.2318 20.84 13.732 20.6336C13.2323 20.4272 12.7782 20.1246 12.3956 19.7431C12.0131 19.3616 11.7097 18.9088 11.5027 18.4105C11.4196 18.2105 11.3528 18.0049 11.3025 17.7954C11.1643 17.2199 11.5239 16.6715 12.0536 16.4074L13.6201 15.6263C14.1498 15.3622 14.4596 14.8138 14.5979 14.2383C14.6482 14.0289 14.7151 13.8232 14.7981 13.6233C15.0051 13.1249 15.3085 12.6721 15.691 12.2907C16.0735 11.9092 16.5276 11.6066 17.0274 11.4002C17.5272 11.1938 18.0628 11.0875 18.6038 11.0875C19.1448 11.0875 19.6804 11.1938 20.1802 11.4002C20.6799 11.6066 21.134 11.9092 21.5165 12.2907C21.899 12.6721 22.2025 13.1249 22.4095 13.6233Z" fill="#4F39F6"/>
<path fill-rule="evenodd" clip-rule="evenodd" d="M18.6039 0.407104C16.6565 0.407104 14.7281 0.789609 12.9289 1.53279C11.1298 2.27596 9.49502 3.36526 8.11793 4.73846C6.74094 6.11168 5.64862 7.74191 4.90338 9.53607C4.28187 11.0323 3.91191 12.6183 3.80619 14.23C3.76745 14.8207 3.43982 15.3622 2.91013 15.6263L1.34361 16.4074C0.81392 16.6715 0.472056 17.2131 0.510796 17.8037C0.616517 19.4155 0.986478 21.0014 1.60798 22.4976C2.35322 24.2918 3.44554 25.922 4.82257 27.2953C6.19959 28.6685 7.83438 29.7577 9.63356 30.5009C11.4327 31.2441 13.361 31.6266 15.3084 31.6266C17.2559 31.6266 19.1842 31.2441 20.9833 30.5009C22.7825 29.7577 24.4173 28.6685 25.7943 27.2953C27.1714 25.922 28.2636 24.2918 29.0089 22.4976C29.6304 21.0014 30.0004 19.4155 30.1061 17.8037C30.1449 17.2131 30.4724 16.6715 31.0021 16.4074L32.5687 15.6263C33.0984 15.3622 33.4402 14.8207 33.4015 14.23C33.2958 12.6183 32.9258 11.0323 32.3043 9.53607C31.559 7.74191 30.4667 6.11168 29.0897 4.73846C27.7127 3.36526 26.0779 2.27596 24.2788 1.53279C22.4796 0.789609 20.5513 0.407104 18.6039 0.407104ZM25.9747 17.8031C26.0283 17.2136 26.3532 16.6715 26.8829 16.4074L28.4494 15.6263C28.9791 15.3622 29.3237 14.8201 29.2701 14.2307C29.1726 13.1588 28.913 12.1058 28.4986 11.1081C27.9603 9.81229 27.1715 8.63492 26.1769 7.64314C25.1824 6.65138 24.0018 5.86467 22.7024 5.32793C21.403 4.79119 20.0103 4.51493 18.6039 4.51493C17.1973 4.51493 15.8047 4.79119 14.5053 5.32793C13.2059 5.86467 12.0252 6.65138 11.0307 7.64314C10.0362 8.63492 9.24729 9.81229 8.70907 11.1081C8.29463 12.1058 8.03504 13.1588 7.93756 14.2307C7.88394 14.8201 7.55906 15.3622 7.02937 15.6263L5.46285 16.4074C4.93316 16.6715 4.58858 17.2136 4.64218 17.8031C4.73966 18.8749 4.99923 19.9279 5.41366 20.9257C5.95189 22.2214 6.74079 23.3988 7.73531 24.3906C8.72983 25.3823 9.91047 26.1691 11.2099 26.7058C12.5093 27.2425 13.902 27.5187 15.3084 27.5187C16.7149 27.5187 18.1076 27.2425 19.407 26.7058C20.7064 26.1691 21.8871 25.3823 22.8816 24.3906C23.8761 23.3988 24.665 22.2214 25.2032 20.9257C25.6176 19.9279 25.8772 18.8749 25.9747 17.8031Z" fill="#4F39F6"/>
<path d="M33.4291 14.8606H29.3084C29.3066 15.0706 29.1832 15.2606 28.9939 15.3549L26.3388 16.6788C26.1496 16.7732 26.0287 16.9631 26.0139 17.1732H30.1346C30.1476 16.963 30.2688 16.7732 30.4581 16.6788L33.1132 15.3549C33.3024 15.2606 33.4254 15.0707 33.4291 14.8606Z" fill="#7463F8"/>
<path d="M0.483398 17.1732H4.6041C4.60591 16.9631 4.72924 16.7732 4.91854 16.6788L7.57361 15.3549C7.76291 15.2606 7.8837 15.0706 7.89861 14.8606H3.77788C3.76483 15.0707 3.64366 15.2606 3.45437 15.3549L0.7993 16.6788C0.610009 16.7732 0.487025 16.963 0.483398 17.1732Z" fill="#7463F8"/>
<path d="M10.3719 14.8606C10.3551 15.0706 10.2346 15.2606 10.0454 15.3549L7.39026 16.6788C7.20094 16.7732 7.07723 16.9632 7.07739 17.1732H11.2035C11.1947 16.9636 11.3201 16.7732 11.5095 16.6788L14.1645 15.3549C14.354 15.2605 14.4728 15.0701 14.498 14.8606H10.3719Z" fill="#7463F8"/>
<path d="M22.7091 14.8606C22.7178 15.0701 22.5925 15.2605 22.403 15.3549L19.748 16.6788C19.5586 16.7732 19.4398 16.9636 19.4146 17.1732H23.5407C23.5575 16.9632 23.6779 16.7732 23.8672 16.6788L26.5223 15.3549C26.7116 15.2606 26.8353 15.0706 26.8351 14.8606H22.7091Z" fill="#7463F8"/>
</g>
<defs>
<clipPath id="clip0_131_3793">
<rect width="33.561" height="32" fill="white" transform="translate(0.00585938)"/>
</clipPath>
</defs>
</svg>`;

function generateIcons() {
  console.log('🎨 Generating icons from SVG...');
  
  const iconsDir = path.join(__dirname, '..', 'public', 'icons');
  
  // Ensure icons directory exists
  if (!fs.existsSync(iconsDir)) {
    fs.mkdirSync(iconsDir, { recursive: true });
  }
  
  // Generate SVG files for each size
  SIZES.forEach(size => {
    const svgContent = SVG_CONTENT
      .replace('PLACEHOLDER_WIDTH', size.toString())
      .replace('PLACEHOLDER_HEIGHT', size.toString());
    
    const svgPath = path.join(iconsDir, `icon${size}.svg`);
    fs.writeFileSync(svgPath, svgContent);
    console.log(`✅ Generated icon${size}.svg`);
  });
  
  console.log('\n📝 To generate PNG files, you can use one of these methods:');
  console.log('1. Online converter: https://cloudconvert.com/svg-to-png');
  console.log('2. Figma: Import SVG and export as PNG');
  console.log('3. Sketch: Import SVG and export as PNG');
  console.log('4. Inkscape: File > Export > PNG Image');
  console.log('5. ImageMagick: convert icon.svg -resize 16x16 icon16.png');
  console.log('\n🎯 Upload each SVG file to the converter and set the dimensions:');
  SIZES.forEach(size => {
    console.log(`   - icon${size}.svg → icon${size}.png (${size}x${size}px)`);
  });
}

// Run if called directly
if (require.main === module) {
  generateIcons();
}

module.exports = { generateIcons }; 